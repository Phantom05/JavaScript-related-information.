<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
  <script src="./prime.js"></script>
</head>

<body>

  <div id="clock"></div>
  <input type="button" value="메인 스레드로 처리하기" id="mainstart">
  <input type="button" value="워커 스레드로 처리하기" id="workerstart">
  <input type="button" value="지우기" id="clear">
  <div id="output"></div>


  <script src="./worker.js"></script>
  <script>
    window.onload = function () {
      var N = "1000000";
      var mainstate = document.getElementById('mainstart');
      var workerstart = document.getElementById('workerstart');
      var clear = document.getElementById('clear');
      var output = document.getElementById('output');
      startClock();


      // worker 객체를 생성한다.
      var worker = new Worker("worker.js");
      // message 이벤트 처리기를 등록한다
      worker.onmessage = function (e) {
        console.log("received: " + new Date());
        output.innerHTML = N + " 이하의 최대 소수=" + e.data;
      };

      // 워커로 처리한다
      workerstart.onclick = function () {
        console.log('send:' + new Date());
        worker.postMessage(N);
      };

      // 메인 스레드로 처리한다
      mainstart.onclick = function () {
        output.innerHTML = N + " 이하의 최대 소수 =" + prime(N);
      };

      // 결과를 지운다
      clear.onclick = function () {
        output.innerHTML = "";
      }

      function startClock() {
        var clock = document.getElementById('clock');
        var startTime = new Date();
        setInterval(function () {
          clock.innerHTML = ((new Date() - startTime) / 1000).toFixed(1);
        }, 100);
      }

    }


  </script>
</body>

</html>